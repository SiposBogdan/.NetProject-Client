@use '@angular/material' as mat;

@tailwind base;
@tailwind components;
@tailwind utilities;

// 1) Include Material’s core styles (ripples, variables, etc)
@include mat.core();   // ← note the ()
/* ===== test-loading: you should see a red border around the viewport ===== */
body { border: 5px solid rgb(255, 0, 0) !important; }


// 2) Scoped override for rounding only inside .custom-theme
.custom-theme {
  button.mat-button,
  button.mat-raised-button,
  button.mat-stroked-button,
  button.mat-flat-button,
  button.mat-icon-button {
    @apply rounded-md;  // ← note the ;
  }
}


// 3) Centered “container” utility override
.container {
  @apply mx-auto max-w-screen-2xl px-4;  // ← note the ;
}

.text-primary {
  color: #2563EB
  ;  // ← note the ;
}

// button.match-input-height{
//   height: var(--mat-form-field-container-height);
// }
:root {
  --mat-form-field-container-height: 56px; // Material’s default height
}

button.match-input-height {
  height: var(--mat-form-field-container-height);
}

.mdc-notched-outline__notch{
  border-right-style: none !important;
}

.mat-mdc-snack-bar-container.snack-error {
  --mdc-snackbar-container-color: #f00;
  --mdc-snack-bar-button-color: #fff;
  --mdc-snackbar-suporting-text-color: #fff;
}

.mat-mdc-snack-bar-container.snack-success {
  --mdc-snackbar-container-color: rgb(42, 145, 42);
  --mdc-snack-bar-button-color: #fff;
  --mdc-snackbar-suporting-text-color: #fff;
}